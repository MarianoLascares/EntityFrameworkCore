// <auto-generated />
using System;
using CodeFirstEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstEF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231001231431_Controllers1")]
    partial class Controllers1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstEF.Models.Almacenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("CodeFirstEF.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("CodeFirstEF.Models.Marcas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("CodeFirstEF.Models.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarcasId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("StockMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnidadesdeMedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProductoId");

                    b.HasIndex("MarcasId");

                    b.HasIndex("UnidadesdeMedidaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("CodeFirstEF.Models.StockProducto", b =>
                {
                    b.Property<int>("ProductosId")
                        .HasColumnType("int");

                    b.Property<int>("AlmacenesID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductosId", "AlmacenesID");

                    b.HasIndex("AlmacenesID");

                    b.ToTable("StockProducto");
                });

            modelBuilder.Entity("CodeFirstEF.Models.UnidadesDeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abrebiatura")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeMedida");
                });

            modelBuilder.Entity("CodeFirstEF.Models.Productos", b =>
                {
                    b.HasOne("CodeFirstEF.Models.CategoriaProducto", "CategoriaProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstEF.Models.Marcas", "MarcasNavigation")
                        .WithMany("ProductosNavigation")
                        .HasForeignKey("MarcasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstEF.Models.UnidadesDeMedida", "UnidadesDeMedidaNavigation")
                        .WithMany("ProductosNavigation")
                        .HasForeignKey("UnidadesdeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProductoNavigation");

                    b.Navigation("MarcasNavigation");

                    b.Navigation("UnidadesDeMedidaNavigation");
                });

            modelBuilder.Entity("CodeFirstEF.Models.StockProducto", b =>
                {
                    b.HasOne("CodeFirstEF.Models.Almacenes", "AlmacenesNavigation")
                        .WithMany("StockProductoId")
                        .HasForeignKey("AlmacenesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstEF.Models.Productos", "ProductosNavigation")
                        .WithMany()
                        .HasForeignKey("ProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlmacenesNavigation");

                    b.Navigation("ProductosNavigation");
                });

            modelBuilder.Entity("CodeFirstEF.Models.Almacenes", b =>
                {
                    b.Navigation("StockProductoId");
                });

            modelBuilder.Entity("CodeFirstEF.Models.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("CodeFirstEF.Models.Marcas", b =>
                {
                    b.Navigation("ProductosNavigation");
                });

            modelBuilder.Entity("CodeFirstEF.Models.UnidadesDeMedida", b =>
                {
                    b.Navigation("ProductosNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
